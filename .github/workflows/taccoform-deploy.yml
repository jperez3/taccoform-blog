name: "taccoform-deploy"

on:
  push:
    branches:
      - master
  pull_request:

env:
  TF_DIR: terraform/app
  TF_VERSION: 0.13.4

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}       

      - name: Terraform Version
        id: version
        run: terraform version

      - name: Terraform Format
        id: fmt
        run: terraform -chdir=$TF_DIR fmt -check
        env:
          TF_VAR_do_token: ${{ secrets.TF_VAR_DO_TOKEN }}
          TF_VAR_do_access_id: ${{ secrets.DO_ACCESS_ID }}
          TF_VAR_do_secret_key: ${{ secrets.DO_SECRET_KEY }}

      - name: Terraform Init
        id: init
        run: terraform -chdir=$TF_DIR init
        env:
          TF_VAR_do_token: ${{ secrets.TF_VAR_DO_TOKEN }}
          TF_VAR_do_access_id: ${{ secrets.DO_ACCESS_ID }}
          TF_VAR_do_secret_key: ${{ secrets.DO_SECRET_KEY }}

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform -chdir=$TF_DIR plan -no-color
        continue-on-error: true
        env:
          TF_VAR_do_token: ${{ secrets.TF_VAR_DO_TOKEN }}
          TF_VAR_do_access_id: ${{ secrets.DO_ACCESS_ID }}
          TF_VAR_do_secret_key: ${{ secrets.DO_SECRET_KEY }}

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
          TF_VAR_do_token: ${{ secrets.TF_VAR_DO_TOKEN }}
          TF_VAR_do_access_id: ${{ secrets.DO_ACCESS_ID }}
          TF_VAR_do_secret_key: ${{ secrets.DO_SECRET_KEY }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`${process.env.PLAN}\`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Taint web droplet for rebuild
        if:  github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform -chdir=$TF_DIR taint digitalocean_droplet.web[0]
        env:
          TF_VAR_do_token: ${{ secrets.TF_VAR_DO_TOKEN }}
          TF_VAR_do_access_id: ${{ secrets.DO_ACCESS_ID }}
          TF_VAR_do_secret_key: ${{ secrets.DO_SECRET_KEY }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform -chdir=$TF_DIR apply -auto-approve
        env:
          TF_VAR_do_token: ${{ secrets.TF_VAR_DO_TOKEN }}
          TF_VAR_do_access_id: ${{ secrets.DO_ACCESS_ID }}
          TF_VAR_do_secret_key: ${{ secrets.DO_SECRET_KEY }}
